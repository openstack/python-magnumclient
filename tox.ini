[tox]
minversion = 2.0
envlist = py37,pypy,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install {opts} {packages}
whitelist_externals = find
setenv =
   VIRTUAL_ENV={envdir}
   PYTHONWARNINGS=default::DeprecationWarning
deps =
       -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/branch/master/upper-constraints.txt}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
  find . -type f -name "*.py[c|o]" -delete
  stestr run --slowest {posargs}

[testenv:bandit]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/branch/master/upper-constraints.txt}
  -r{toxinidir}/test-requirements.txt
commands = bandit -r magnumclient -x tests -n5 -ll

[testenv:pypy]
basepython = python3
deps =
       -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/branch/master/upper-constraints.txt}
       setuptools<3.2
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

[testenv:debug]
basepython = python3
commands = oslo_debug_helper -t magnumclient/tests {posargs}

[testenv:pep8]
basepython = python3
commands =
  flake8
  # Run security linter
  bandit -r magnumclient -x tests -n5 -ll

[testenv:docs]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -W -b html doc/source doc/build/html

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:cover]
basepython = python3
setenv =
    PYTHON=coverage run --source magnumclient --parallel-mode
commands =
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report

[flake8]
# E123, E125 skipped as they are invalid PEP-8.

show-source = True
ignore = E123,E125,W503,W504
builtins = _
exclude=.venv,.git,.tox,dist,doc,,*lib/python*,*egg,build

[hacking]
import_exceptions = magnumclient._i18n

[testenv:releasenotes]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands =
  rm -rf releasenotes/build
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html
